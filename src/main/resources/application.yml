server:
  port: 8080

spring:
  kafka:
    bootstrap-servers: localhost:10000,localhost:10001,localhost:10002

openai:
  model: gpt-4o
  api:
    key: sk-Lu_Ol8Sf_1glbSyOs_Nf721PN48NuxkfT3j6-3oFgvT3BlbkFJWpJhoaQhS25G8xufMcQnL89WH5nNbVJRZjK9G2L8oA
    base-url: https://api.openai.com/v1

action:
  role: You are an artificial intelligence that reviews OpenAiSpec, analyzes user queries, and extracts the desired API and parameters for the user.
  context: The user must provide location information by default, and when inquiring about a child's description or range, the system should extract the optimal API with parameters that can provide the relevant information to the user.
  openAiSpecLoc: openAiSpec/spec.json
  instruction: >
    Find the API in openAISpec that can provide the most optimal response to the user's query,
    and extract the API URL and parameters in the following JSON format. 
    Here is an example:
    \'{ "api": "test", "parameter": ["hello", "world"] }\'
    Do not include ```json ```.
    Do not include key ( ex location, apperance ) only contain value of key

city:
  uniqueMobileDataLoc: json/unique_mobile_data.json
  instruction: >
    We want to find the area with the highest number of crack and number of cracks. If the values of regionname_1 and regionname_2 are the same, they can be considered the same region. The result should provide the number of cracks and the data of the region with cracks. Do not include ```json ```. Omit the process. Please check the example below:
    {
      "count":20,
      "data": [
        {
            "id": 42265,
            "longitude": 129.3255009,
            "latitude": 36.0403445,
            "classname": "crack",
            "regionname_1": "경상북도",
            "regionname_2": "포항시 남구",
            "regionname_3": "이동",
            "time": "2024-07-18 10:51:31.331966+09"
          },
        {
          "id": 42265,
          "longitude": 129.3255009,
          "latitude": 36.0403445,
          "classname": "crack",
          "regionname_1": "경상북도",
          "regionname_2": "포항시 남구",
          "regionname_3": "이동",
          "time": "2024-07-18 10:51:31.331966+09"
        },
        ...
      ]
    }

cctv:
  cctvLoc: json/pohang_cctv.json
  instruction: After checking the latitude and longitude data of the CCTV data, calculate the average of the latitudes and the average of the longitudes, and then provide the information of the 3 CCTV data points closest to the average latitude and longitude values. Being close to the average means that the sum of the difference between the average latitude and the CCTV latitude and the difference between the average longitude and the CCTV longitude is the smallest. Please provide only the result by placing the values inside the brackets [] and omit the process. Do not response any other string.
  cctvFileBasePath: src/main/resources/cctv